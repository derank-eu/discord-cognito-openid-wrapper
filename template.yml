AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Discord cognito openid wrapper

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 15
    Environment:
      Variables:
        DISCORD_CLIENT_ID:
          Ref: DiscordClientIdParameter
        DISCORD_CLIENT_SECRET:
          Ref: DiscordClientSecretParameter
        COGNITO_REDIRECT_URI:
          Ref: CognitoRedirectUriParameter
        DISCORD_API_URL:
          Ref: DiscordUrlParameter
        DISCORD_LOGIN_URL:
          Ref: DiscordLoginUrlParameter
        SCOPES_SUPPORTED:
          Ref: ScopesSupportedParameter
        CLAIMS_SUPPORTED:
          Ref: ClaimsSupportedParameter
        LOG_LEVEL:
          Ref: PowertoolsLogLevel

Parameters:
  PowertoolsLogLevel:
    Type: String
    Default: 'INFO'
  DiscordClientIdParameter:
    Type: String
  DiscordClientSecretParameter:
    Type: String
  CognitoRedirectUriParameter:
    Type: String
  DiscordUrlParameter:
    Type: String
    Default: 'https://discord.com'
    MinLength: 1
  DiscordLoginUrlParameter:
    Type: String
    Default: 'https://discord.com'
    MinLength: 1
  ScopesSupportedParameter:
    Type: String
    MinLength: 1
  ClaimsSupportedParameter:
    Type: String
    MinLength: 1

Resources:
  OpenIdDiscovery:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: openIdConfiguration.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /.well-known/openid-configuration
            Method: get
  Authorize:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: authorize.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /authorize
            Method: get
  Token:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: token.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /token
            Method: get
        PostResource:
          Type: Api
          Properties:
            Path: /token
            Method: post
  UserInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: userinfo.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /userinfo
            Method: get
        PostResource:
          Type: Api
          Properties:
            Path: /userinfo
            Method: post
  Jwks:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./dist-lambda
      Handler: jwks.handler
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /.well-known/jwks.json
            Method: get

Outputs:
  DiscordShimIssuer:
    Description: 'Discord OpenID Shim Issuer'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'
